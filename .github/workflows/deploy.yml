# This is a basic workflow to help you get started with Actions

name: TripShorts App Deployment

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTION_KEY }}
          submodules: recursive

      # (2) JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # (3) Gradle build
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create resources directory if it does not exist
        run: mkdir -p src/main/resources

      - name: Copy config files
        run: find config -type f ! -name 'readme.md' ! -name '.gitignore' -exec cp -t src/main/resources/ {} +


      - name: Build with Gradle
        run: ./gradlew build -x test
        
      - name: Build Docker Image
        run: docker build -t seowj/tripshorts .

      # (4) 도커 허브 로그인
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u seowj --password-stdin

      # (5) 도커 이미지 Push
      - name: Push the Docker image
        run: docker push seowj/tripshorts
        
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # (6) EC2 에 도커 이미지 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull seowj/tripshorts
            docker stop tripshorts
            docker rm tripshorts
            docker run -d --name tripshorts --log-driver json-file --log-opt max-size=10m --log-opt max-file=10 -p 8080:8080 seowj/tripshorts
            docker image prune -f
